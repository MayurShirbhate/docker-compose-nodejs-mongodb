name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Verify Docker and Docker Compose
        run: |
          docker --version
          docker-compose --version

      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Node.js image
        run: |
          docker-compose build
          docker images
          docker tag docker-compose-nodejs-mongodb-app:latest ${{ secrets.DOCKER_USERNAME_REPO }}/docker-compose-nodejs-mongodb:latest
          docker push ${{ secrets.DOCKER_USERNAME_REPO }}/docker-compose-nodejs-mongodb:latest

          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy project files to EC2
        run: |
          rsync -az -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519" ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/docker-compose-nodejs-mongodb
        # rsync -az -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519" ./ \ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/docker-compose-nodejs-mongodb --progress

      - name: Run docker-compose on EC2
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF
            cd ~/docker-compose-nodejs-mongodb
            docker-compose down || true
            docker-compose pull || true
            docker-compose build
            docker-compose up -d
          EOF
